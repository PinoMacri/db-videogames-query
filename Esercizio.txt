1- Selezionare tutte le software house americane (3)
SELECT *
FROM software_houses
WHERE country = 'United States';
2- Selezionare tutti i giocatori della città di 'Rogahnland' (2)
SELECT *
FROM players p 
WHERE city =  'Rogahnland';
3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)
SELECT *
FROM players p 
WHERE name like  '%a';
4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)
SELECT *
FROM reviews 
where player_id ='800';
5- Contare quanti tornei ci sono stati nell'anno 2015 (9)
SELECT COUNT(year)
FROM tournaments t
WHERE year = '2015';
6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)
SELECT *
FROM awards
WHERE description  like '%facere%';
7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)
SELECT *
FROM category_videogame v 
where category_id = 6
or category_id = 2;
8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)
SELECT *
FROM reviews r  
where rating between 2 and 4;
9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)
SELECT *
FROM videogames r  
where release_date like '2020%';
10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da stelle, mostrandoli una sola volta (443)
SELECT videogame_id 
FROM reviews r  
where rating = 5;
1- Contare quante software house ci sono per ogni paese (3)
SELECT COUNT(country)
FROM software_houses
GROUP BY country;
2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)
SELECT vg.ID, COUNT(r.videogame_id) AS numero_recensioni
FROM videogames vg
LEFT JOIN reviews r ON vg.ID = r.videogame_id
GROUP BY vg.ID;
3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)
SELECT plv.pegi_label_id, COUNT(*) AS conteggio_videogiochi
FROM pegi_label_videogame plv
WHERE plv.pegi_label_id 
GROUP BY plv.pegi_label_id;
4- Mostrare il numero di videogiochi rilasciati ogni anno (11)
SELECT YEAR(release_date) AS anno, COUNT(*) AS numero_videogiochi_rilasciati
FROM videogames v 
GROUP BY YEAR(release_date);
5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)
SELECT device_id, COUNT(*) 
FROM device_videogame
WHERE device_id
GROUP by device_id;
6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)
SELECT AVG(rating)
FROM reviews
GROUP by videogame_id ;
1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)
SELECT distinct player_id
FROM players p
join reviews r 
on p.id = player_id;
2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)
SELECT DISTINCT v.*
FROM videogames v
JOIN tournament_videogame tv ON v.id = tv.videogame_id
JOIN tournaments t ON tv.tournament_id = t.id
WHERE t.year = 2016;
3- Mostrare le categorie di ogni videogioco (1718)
select *
from videogames v 
join category_videogame cv on v.id=cv.videogame_id 
join categories c on c.id=category_id;
4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)
select *
from videogames v 
join software_houses sh on v.id=software_house_id 
where release_date > '2020-12-31';
5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)
SELECT sh.name, a.name
FROM software_houses sh
JOIN videogames v ON sh.id = v.software_house_id
JOIN award_videogame av ON v.id = av.videogame_id
JOIN awards a ON av.award_id = a.id;
6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)
SELECT DISTINCT c.id, p.id
FROM categories c
JOIN category_videogame cv ON c.id = cv.category_id
JOIN videogames v ON cv.videogame_id = v.id
JOIN reviews r ON v.id = r.videogame_id
JOIN pegi_label_videogame plv ON v.id = plv.videogame_id
JOIN pegi_labels p ON plv.pegi_label_id = p.id
WHERE r.rating IN (4, 5);
7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)
SELECT DISTINCT vg.name
FROM videogames vg
JOIN tournament_videogame tv ON vg.id = tv.videogame_id
JOIN tournaments t ON tv.tournament_id = t.id
JOIN players p ON t.id = p.id
WHERE p.name LIKE 'S%';
8- Selezionare le città in cui è stato giocato il gioco dell'anno del 2018 (36)
SELECT DISTINCT t.city
FROM tournaments AS t
JOIN tournament_videogame AS tv ON t.id = tv.tournament_id
JOIN videogames AS v ON tv.videogame_id = v.id
WHERE v.name = 'Gioco dell'Anno 2018' AND t.year = 2018;
9- Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306)
SELECT p.name, p.lastname
FROM players AS p
JOIN tournament_videogame AS tv ON p.id = tv.player_id
JOIN tournaments AS t ON tv.tournament_id = t.id
JOIN videogames AS v ON tv.videogame_id = v.id
WHERE v.name = 'gioco più atteso del 2018' AND t.year = 2019 AND t.id = 3306;
